<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="severity" value="warning"/>
    <property name="charset" value="UTF-8"/>
    <!-- Filter out Checkstyle warnings that have been suppressed with the @SuppressWarnings annotation -->
    <module name="SuppressWarningsFilter" />
    <module name="TreeWalker">
        <!-- Make the @SuppressWarnings annotations available to Checkstyle -->
        <module name="SuppressWarningsHolder" />
        <module name="JavadocMethod">
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowMissingReturnTag" value="true"/>
        </module>
        <module name="MissingOverride"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="scope" value="private"/>
        </module>
        <module name="MissingJavadocType">
            <property name="scope" value="private"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z0-9_]+$"/>
        </module>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="CatchParameterName">
            <property name="format" value="^e[a-zA-Z0-9]*$"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z0-9_]+$"/>
        </module>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]+$"/>
        </module>
        <module name="TypeName"/>
        <module name="AvoidStarImport"/>
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun, com.sun.org.apache.xerces, org.hibernate, jersey.repackaged"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="AnonInnerLength">
            <property name="max" value="40"/>
        </module>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens"
                      value="BAND,BOR,BSR,BXOR,COLON,DIV,EQUAL,GE,GT,LAND,LE,LITERAL_INSTANCEOF,LOR,LT,MINUS,MOD,NOT_EQUAL,PLUS,QUESTION,SL,SR,STAR"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="eol"/>
            <property name="tokens"
                      value="ASSIGN,BAND_ASSIGN,BOR_ASSIGN,BSR_ASSIGN,BXOR_ASSIGN,DIV_ASSIGN,MINUS_ASSIGN,MOD_ASSIGN,PLUS_ASSIGN,SL_ASSIGN,SR_ASSIGN,STAR_ASSIGN"/>
        </module>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="tokens"
                      value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
        </module>
        <module name="ModifierOrder"/>
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="OneStatementPerLine"/>
        <module name="EqualsHashCode"/>
        <module name="FinalLocalVariable"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.util.Vector,java.util.Hashmap,java.lang.StringBuffer"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="ClassFanOutComplexity">
            <property name="max" value="40"/>
        </module>
        <module name="SuperFinalize"/>
        <module name="PackageDeclaration"/>
        <module name="DeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <!--module name="MultipleStringLiterals"/-->
        <module name="MultipleVariableDeclarations"/>
        <module name="UnnecessaryParentheses"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>
        <module name="BooleanExpressionComplexity">
            <property name="max" value="5"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="8"/>
        </module>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
<!--         <module name="Indentation">
            <property name="caseIndent" value="0"/>
            <property name="lineWrappingIndentation" value="0"/>
        </module> -->
        <module name="TrailingComment">
            <property name="severity" value="ignore"/>
            <property name="legalComment" value="&quot;$NON-NLS&quot;.*&quot;$&quot;"/>
        </module>
        <module name="DescendantToken">
            <!-- Seiteneffekte in assert -->
            <property name="tokens" value="LITERAL_ASSERT"/>
            <property name="limitedTokens"
                      value="ASSIGN,DEC,INC,POST_DEC,POST_INC,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,DIV_ASSIGN,MOD_ASSIGN,BSR_ASSIGN,SR_ASSIGN,SL_ASSIGN,BAND_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN"/>
            <property name="maximumNumber" value="0"/>
        </module>
        <module name="DescendantToken">
            <!-- return im finally -->
            <property name="tokens" value="LITERAL_FINALLY"/>
            <property name="limitedTokens" value="LITERAL_RETURN"/>
            <property name="maximumNumber" value="0"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="message" value="getBytes ohne Zeichensatz ist nicht erlaubt."/>
            <property name="format" value="\.getBytes\(\)"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="message"
                      value="Erstellung eines neuen Strings über Konstruktor nicht erlaubt, weil so immer ein neues Objekt erzeugt wird."/>
            <property name="format" value="new String\("/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="message" value="printStackTrace auf System.out nicht erlaubt."/>
            <property name="format" value="\.printStackTrace\(\)"/>
        </module>
        <module name="IllegalTokenText">
            <!-- Oktal-Literale verbieten -->
            <property name="tokens" value="NUM_INT,NUM_LONG"/>
            <property name="format" value="^0[0-9]"/>
            <property name="ignoreCase" value="true"/>
        </module>
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat" value="NO CHECKSTYLE ([^ ]+) FOR NEXT LINE BECAUSE "/>
            <property name="checkFormat" value="$1"/>
            <property name="influenceFormat" value="1"/>
            <property name="checkC" value="false"/>
        </module>
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat" value="NO CHECKSTYLE ([^ ]+) FOR CURRENT LINE BECAUSE "/>
            <property name="checkFormat" value="$1"/>
            <property name="influenceFormat" value="0"/>
            <property name="checkC" value="false"/>
        </module>
        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="CHECKSTYLE.OFF\: ([\w\|]+) BECAUSE "/>
            <property name="onCommentFormat" value="CHECKSTYLE.ON\: ([\w\|]+)"/>
            <property name="checkFormat" value="$1"/>
        </module>
    </module>
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="ignorePattern" value="^import .*"/>
    </module>
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="crlf"/>
        <property name="fileExtensions" value=".java .xml .xsd .js"/>
    </module>
    <module name="FileLength">
        <property name="max" value="1000"/>
    </module>
    <module name="FileLength">
        <!-- damit die, bei denen wir gesagt haben "mehr als 1000 ist OK" nicht unbemerkt beliebig weiter wachsen -->
        <property name="max" value="1500"/>
    </module>
    <module name="FileTabCharacter"/>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>
</module>
